openapi: 3.0.3
info:
  title: User Management API
  description: API to manage users, profiles, and payment methods.
  version: 1.0.0
servers:
  - url: http://localhost:8081/user_api
    description: main local server

paths:
  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: A list of users
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully

  /users/{userId}:
    get:
      summary: Get user by ID
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    put:
      summary: Update user by ID
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
    delete:
      summary: Delete user by ID
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted successfully

  /users/{userId}/profile:
    get:
      summary: Get user's profile
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Profile details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
    post:
      summary: Create a profile for the user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '201':
          description: Profile created successfully

  /users/{userId}/profile/{profileId}:
    get:
      summary: Get profile by ID
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Profile details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
    put:
      summary: Update profile by ID
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '200':
          description: Profile updated successfully
    delete:
      summary: Delete profile by ID
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Profile deleted successfully

components:
  schemas:
    User:
      type: object
      properties:
        nome:
          type: string
        surname:
          type: string
        password:
          type: string
        email:
          type: string
        dateOfBirthday:
          type: string
          format: date
        paymentMethod:
          type: string
        isActive:
          type: boolean
      required:
        - nome
        - surname
        - password
        - email
        - dateOfBirthday
        - paymentMethod
        - isActive

    Profile:
      type: object
      properties:
        email:
          type: string
        userName:
          type: string
        image:
          type: string
          description: Path to profile image
        views:
          type: array
          items:
            type: object

        raccomanded:
          type: array
          items:
            type: object
      required:
        - email
        - userName
        - image
